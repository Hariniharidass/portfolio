{"ast":null,"code":"var _jsxFileName = \"/Users/harini/Documents/Harini/portfolio/portfolio/src/components/Project.js\";\nimport React, { Component } from 'react';\nimport Navbars from './Navbars';\nimport './project.css';\nimport { Card } from 'react-bootstrap';\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport ReactFreezeframe from 'react-freezeframe';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport ReactImageAppear from 'react-image-appear';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: \"false\"\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        loaded: \"true\"\n      });\n    }, 2000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbars, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Vanilla Javascript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-project\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"items\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(SRLWrapper, {\n              children: this.state.loaded === \"true\" ? /*#__PURE__*/_jsxDEV(ReactFreezeframe, {\n                src: \"/gifs/countdown.gif\",\n                className: \"image-top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 65\n              }, this) : /*#__PURE__*/_jsxDEV(ReactImageAppear, {\n                src: \"/gifs/countdown.gif\",\n                className: \"image-top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Count-Down Timer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: \"A vanilla JS application which count downs to new year using \\\"Date\\\" object\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"items\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(SRLWrapper, {\n              children: this.state.loaded === \"true\" ? /*#__PURE__*/_jsxDEV(ReactFreezeframe, {\n                src: \"/gifs/quiz.gif\",\n                className: \"image-top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 65\n              }, this) : /*#__PURE__*/_jsxDEV(ReactImageAppear, {\n                src: \"/gifs/quiz.gif\",\n                className: \"image-top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Simple Quiz\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: \"A vanilla JS Quiz application using API fetch await to load questions dynamically.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"items\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(SRLWrapper, {\n              children: this.state.loaded === \"true\" ? /*#__PURE__*/_jsxDEV(ReactFreezeframe, {\n                src: \"/gifs/recipe.gif\",\n                className: \"image-top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 65\n              }, this) : /*#__PURE__*/_jsxDEV(ReactImageAppear, {\n                src: \"/gifs/recipe.gif\",\n                className: \"image-top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Recipe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: \"A vanilla JS Recipe application to show recipes via keyword or ID search. Favourite recipes can be saved.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"NodeJS-ExpressJS-Handlebars-MongoDB-MySQL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-project-big\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"items-big\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(SRLWrapper, {\n              children: this.state.loaded === \"true\" ? /*#__PURE__*/_jsxDEV(ReactFreezeframe, {\n                src: \"/gifs/shoppingCart.gif\",\n                className: \"image-top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 65\n              }, this) : /*#__PURE__*/_jsxDEV(ReactImageAppear, {\n                src: \"/gifs/shoppingCart.gif\",\n                className: \"image-top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Shopping Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"A Shopping Cart application using ExpressJS, MongoDB, Handlebars.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"User login and registration validated and uses PassportJS and password hashes and stored in DB using  Bcrypt-NodeJS. Prevents the Cross-Site Request Forgery(CSRF) attack by using CSURF module. Success and error messages displayed using connect-flash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"User can add,update delete and checkout products.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"items-big\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(SRLWrapper, {\n              children: this.state.loaded === \"true\" ? /*#__PURE__*/_jsxDEV(ReactFreezeframe, {\n                src: \"/gifs/auction.gif\",\n                className: \"image-top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 65\n              }, this) : /*#__PURE__*/_jsxDEV(ReactImageAppear, {\n                src: \"/gifs/auction.gif\",\n                className: \"image-top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Auctioner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Auction website using ExpressJS, MySQL and Handlebars. Utilised Fashe theme from colorlib.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"User login and registration validated and uses PassportJS and password hashes and stored in DB using  Bcrypt-NodeJS. Only logged-in user can make bids. Prevents the Cross-Site Request Forgery(CSRF) attack by using CSURF module. Success and error messages displayed using connect-flash.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"User can add,update delete products to sell and also make bids. Password forgot/reset option via sendgrid implemented.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"PHP MySQL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-project-large\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"items-large\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(SRLWrapper, {\n              children: this.state.loaded === \"true\" ? /*#__PURE__*/_jsxDEV(ReactFreezeframe, {\n                src: \"/gifs/countdown.gif\",\n                className: \"image-top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 65\n              }, this) : /*#__PURE__*/_jsxDEV(ReactImageAppear, {\n                src: \"/gifs/countdown.gif\",\n                className: \"image-top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Image Gallery\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: \"A PHP application which count downs to new year using \\\"Date\\\" object\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Project;\n/*\n\n <Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} />\n\nimport React, { useState } from 'react'\nimport Navbars from './Navbars'\nimport './project.css'\nimport { Card } from 'react-bootstrap';\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport ReactFreezeframe from 'react-freezeframe';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nconst Project = () =>\n{\n    const [isLoading, setIsLoading] = useState(true);\n\n    function onLoad()\n    {\n        // delay for demo only\n        setTimeout(() => setIsLoading(false), 3000);\n        console.log(isLoading)\n        // setIsLoading(false)\n    }\n    return (\n\n        <div>\n            <Navbars />\n            {isLoading}\n            <h2>Vanilla Javascript</h2>\n            <div className=\"container-project\">\n\n                <div className=\"items\">\n                    <Card>\n\n                        <SRLWrapper>\n                            {isLoading ?\n\n                                <ReactFreezeframe\n                                    src=\"/gifs/countdown.gif\"\n                                    className=\"image-top\"\n                                    style={{ display: isLoading ? \"none\" : \"block\" }}\n                                    onLoad={onLoad} />\n                                :\n                                <Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} />\n                            }\n                        </SRLWrapper>\n                        <Card.Body>\n                            <Card.Title>Count-Down Timer</Card.Title>\n                            <Card.Text>\n                                A vanilla JS application which count downs to new year using \"Date\" object\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"items\">\n                    <Card >\n                        <SRLWrapper>\n                            {isLoading ?\n                                <ReactFreezeframe\n                                    src=\"/gifs/quiz.gif\"\n                                    className=\"image-top\"\n                                    style={{ display: isLoading ? \"none\" : \"block\" }}\n                                    onLoad={onLoad} />\n                                :\n                                <Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} />\n                            }\n                        </SRLWrapper>\n                        <Card.Body>\n                            <Card.Title>Simple Quiz</Card.Title>\n                            <Card.Text>\n                                A vanilla JS Quiz application using API fetch await to load questions dynamically.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"items\">\n                    <Card >\n                        <SRLWrapper>\n                            <ReactFreezeframe src=\"/gifs/recipe.gif\" className=\"image-top\" />\n                        </SRLWrapper>\n                        <Card.Body>\n                            <Card.Title>Recipe</Card.Title>\n                            <Card.Text>\n                                A vanilla JS Recipe application to show recipes via keyword or ID search. Favourite recipes can be saved.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n            <h2>NodeJS-ExpressJS-Handlebars-MongoDB-MySQL</h2>\n            <div className=\"container-project-big\">\n                <div className=\"items-big\">\n                    <Card >\n                        <SRLWrapper>\n                            <ReactFreezeframe src=\"/gifs/shoppingCart.gif\" className=\"image-top\" />\n                        </SRLWrapper>\n                        <Card.Body>\n                            <Card.Title>Shopping Cart</Card.Title>\n\n                            <div>\n                                A Shopping Cart application using ExpressJS, MongoDB, Handlebars.\n                                              </div>\n                            <div>\n                                User login and registration validated and uses PassportJS and password hashes and stored in DB using  Bcrypt-NodeJS. Prevents the Cross-Site Request Forgery(CSRF) attack by using CSURF module. Success and error messages displayed using connect-flash\n                                    </div>\n                            <div>\n                                User can add,update delete and checkout products.\n                                             </div>\n\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"items-big\">\n                    <Card >\n                        <SRLWrapper>\n                            <ReactFreezeframe src=\"/gifs/auction.gif\" className=\"image-top\" />\n                        </SRLWrapper>\n                        <Card.Body>\n                            <Card.Title>Auctioner</Card.Title>\n\n                            <div>\n                                Auction website using ExpressJS, MySQL and Handlebars. Utilised Fashe theme from colorlib.\n                                             </div>\n                            <div>\n                                User login and registration validated and uses PassportJS and password hashes and stored in DB using  Bcrypt-NodeJS. Only logged-in user can make bids. Prevents the Cross-Site Request Forgery(CSRF) attack by using CSURF module. Success and error messages displayed using connect-flash.\n                            </div>\n                            <div>\n                                User can add,update delete products to sell and also make bids. Password forgot/reset option via sendgrid implemented.\n                                             </div>\n\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Project\n*/","map":{"version":3,"sources":["/Users/harini/Documents/Harini/portfolio/portfolio/src/components/Project.js"],"names":["React","Component","Navbars","Card","SRLWrapper","ReactFreezeframe","Loader","ReactImageAppear","Project","constructor","props","state","loaded","componentDidMount","setTimeout","setState","render"],"mappings":"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":["import React, { Component } from 'react'\nimport Navbars from './Navbars'\nimport './project.css'\nimport { Card } from 'react-bootstrap';\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport ReactFreezeframe from 'react-freezeframe';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport ReactImageAppear from 'react-image-appear';\nexport class Project extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { loaded: \"false\" };\n    }\n    componentDidMount()\n    {\n        setTimeout(() =>\n        {\n            this.setState({ loaded: \"true\" })\n        }, 2000)\n    }\n\n\n    render()\n    {\n\n        return (\n            <div>\n                <Navbars />\n                <h2>Vanilla Javascript</h2>\n                <div className=\"container-project\">\n\n                    <div className=\"items\">\n                        <Card>\n                            <SRLWrapper>\n                                {this.state.loaded === \"true\" ? <ReactFreezeframe\n                                    src=\"/gifs/countdown.gif\"\n                                    className=\"image-top\"\n                                /> : <ReactImageAppear\n                                    src=\"/gifs/countdown.gif\"\n                                    className=\"image-top\"\n                                />}\n                            </SRLWrapper>\n                            <Card.Body>\n                                <Card.Title>Count-Down Timer</Card.Title>\n                                <Card.Text>\n                                    A vanilla JS application which count downs to new year using \"Date\" object\n                            </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"items\">\n                        <Card >\n                            <SRLWrapper>\n                                {this.state.loaded === \"true\" ? <ReactFreezeframe\n                                    src=\"/gifs/quiz.gif\"\n                                    className=\"image-top\"\n                                /> : <ReactImageAppear\n                                    src=\"/gifs/quiz.gif\"\n                                    className=\"image-top\"\n                                />}\n                            </SRLWrapper>\n                            <Card.Body>\n                                <Card.Title>Simple Quiz</Card.Title>\n                                <Card.Text>\n                                    A vanilla JS Quiz application using API fetch await to load questions dynamically.\n                            </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"items\">\n                        <Card >\n                            <SRLWrapper>\n                                {this.state.loaded === \"true\" ? <ReactFreezeframe\n                                    src=\"/gifs/recipe.gif\"\n                                    className=\"image-top\"\n                                /> : <ReactImageAppear\n                                    src=\"/gifs/recipe.gif\"\n                                    className=\"image-top\"\n                                />}\n                            </SRLWrapper>\n                            <Card.Body>\n                                <Card.Title>Recipe</Card.Title>\n                                <Card.Text>\n                                    A vanilla JS Recipe application to show recipes via keyword or ID search. Favourite recipes can be saved.\n                            </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n                <h2>NodeJS-ExpressJS-Handlebars-MongoDB-MySQL</h2>\n                <div className=\"container-project-big\">\n                    <div className=\"items-big\">\n                        <Card >\n                            <SRLWrapper>\n                                {this.state.loaded === \"true\" ? <ReactFreezeframe\n                                    src=\"/gifs/shoppingCart.gif\"\n                                    className=\"image-top\"\n                                /> : <ReactImageAppear\n                                    src=\"/gifs/shoppingCart.gif\"\n                                    className=\"image-top\"\n                                />}\n                            </SRLWrapper>\n                            <Card.Body>\n                                <Card.Title>Shopping Cart</Card.Title>\n\n                                <div>\n                                    A Shopping Cart application using ExpressJS, MongoDB, Handlebars.\n                                              </div>\n                                <div>\n                                    User login and registration validated and uses PassportJS and password hashes and stored in DB using  Bcrypt-NodeJS. Prevents the Cross-Site Request Forgery(CSRF) attack by using CSURF module. Success and error messages displayed using connect-flash\n                                    </div>\n                                <div>\n                                    User can add,update delete and checkout products.\n                                             </div>\n\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"items-big\">\n                        <Card >\n                            <SRLWrapper>\n                                {this.state.loaded === \"true\" ? <ReactFreezeframe\n                                    src=\"/gifs/auction.gif\"\n                                    className=\"image-top\"\n                                /> : <ReactImageAppear\n                                    src=\"/gifs/auction.gif\"\n                                    className=\"image-top\"\n                                />}\n                            </SRLWrapper>\n                            <Card.Body>\n                                <Card.Title>Auctioner</Card.Title>\n\n                                <div>\n                                    Auction website using ExpressJS, MySQL and Handlebars. Utilised Fashe theme from colorlib.\n                                             </div>\n                                <div>\n                                    User login and registration validated and uses PassportJS and password hashes and stored in DB using  Bcrypt-NodeJS. Only logged-in user can make bids. Prevents the Cross-Site Request Forgery(CSRF) attack by using CSURF module. Success and error messages displayed using connect-flash.\n                            </div>\n                                <div>\n                                    User can add,update delete products to sell and also make bids. Password forgot/reset option via sendgrid implemented.\n                                             </div>\n\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n                <h2>PHP MySQL</h2>\n                <div className=\"container-project-large\">\n\n                    <div className=\"items-large\">\n                        <Card>\n                            <SRLWrapper>\n                                {this.state.loaded === \"true\" ? <ReactFreezeframe\n                                    src=\"/gifs/countdown.gif\"\n                                    className=\"image-top\"\n                                /> : <ReactImageAppear\n                                    src=\"/gifs/countdown.gif\"\n                                    className=\"image-top\"\n                                />}\n                            </SRLWrapper>\n                            <Card.Body>\n                                <Card.Title>Image Gallery</Card.Title>\n                                <Card.Text>\n                                    A PHP application which count downs to new year using \"Date\" object\n                            </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default Project\n\n/*\n\n <Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} />\n\nimport React, { useState } from 'react'\nimport Navbars from './Navbars'\nimport './project.css'\nimport { Card } from 'react-bootstrap';\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport ReactFreezeframe from 'react-freezeframe';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nconst Project = () =>\n{\n    const [isLoading, setIsLoading] = useState(true);\n\n    function onLoad()\n    {\n        // delay for demo only\n        setTimeout(() => setIsLoading(false), 3000);\n        console.log(isLoading)\n        // setIsLoading(false)\n    }\n    return (\n\n        <div>\n            <Navbars />\n            {isLoading}\n            <h2>Vanilla Javascript</h2>\n            <div className=\"container-project\">\n\n                <div className=\"items\">\n                    <Card>\n\n                        <SRLWrapper>\n                            {isLoading ?\n\n                                <ReactFreezeframe\n                                    src=\"/gifs/countdown.gif\"\n                                    className=\"image-top\"\n                                    style={{ display: isLoading ? \"none\" : \"block\" }}\n                                    onLoad={onLoad} />\n                                :\n                                <Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} />\n                            }\n                        </SRLWrapper>\n                        <Card.Body>\n                            <Card.Title>Count-Down Timer</Card.Title>\n                            <Card.Text>\n                                A vanilla JS application which count downs to new year using \"Date\" object\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"items\">\n                    <Card >\n                        <SRLWrapper>\n                            {isLoading ?\n                                <ReactFreezeframe\n                                    src=\"/gifs/quiz.gif\"\n                                    className=\"image-top\"\n                                    style={{ display: isLoading ? \"none\" : \"block\" }}\n                                    onLoad={onLoad} />\n                                :\n                                <Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} />\n                            }\n                        </SRLWrapper>\n                        <Card.Body>\n                            <Card.Title>Simple Quiz</Card.Title>\n                            <Card.Text>\n                                A vanilla JS Quiz application using API fetch await to load questions dynamically.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"items\">\n                    <Card >\n                        <SRLWrapper>\n                            <ReactFreezeframe src=\"/gifs/recipe.gif\" className=\"image-top\" />\n                        </SRLWrapper>\n                        <Card.Body>\n                            <Card.Title>Recipe</Card.Title>\n                            <Card.Text>\n                                A vanilla JS Recipe application to show recipes via keyword or ID search. Favourite recipes can be saved.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n            <h2>NodeJS-ExpressJS-Handlebars-MongoDB-MySQL</h2>\n            <div className=\"container-project-big\">\n                <div className=\"items-big\">\n                    <Card >\n                        <SRLWrapper>\n                            <ReactFreezeframe src=\"/gifs/shoppingCart.gif\" className=\"image-top\" />\n                        </SRLWrapper>\n                        <Card.Body>\n                            <Card.Title>Shopping Cart</Card.Title>\n\n                            <div>\n                                A Shopping Cart application using ExpressJS, MongoDB, Handlebars.\n                                              </div>\n                            <div>\n                                User login and registration validated and uses PassportJS and password hashes and stored in DB using  Bcrypt-NodeJS. Prevents the Cross-Site Request Forgery(CSRF) attack by using CSURF module. Success and error messages displayed using connect-flash\n                                    </div>\n                            <div>\n                                User can add,update delete and checkout products.\n                                             </div>\n\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"items-big\">\n                    <Card >\n                        <SRLWrapper>\n                            <ReactFreezeframe src=\"/gifs/auction.gif\" className=\"image-top\" />\n                        </SRLWrapper>\n                        <Card.Body>\n                            <Card.Title>Auctioner</Card.Title>\n\n                            <div>\n                                Auction website using ExpressJS, MySQL and Handlebars. Utilised Fashe theme from colorlib.\n                                             </div>\n                            <div>\n                                User login and registration validated and uses PassportJS and password hashes and stored in DB using  Bcrypt-NodeJS. Only logged-in user can make bids. Prevents the Cross-Site Request Forgery(CSRF) attack by using CSURF module. Success and error messages displayed using connect-flash.\n                            </div>\n                            <div>\n                                User can add,update delete products to sell and also make bids. Password forgot/reset option via sendgrid implemented.\n                                             </div>\n\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Project\n*/"]},"metadata":{},"sourceType":"module"}