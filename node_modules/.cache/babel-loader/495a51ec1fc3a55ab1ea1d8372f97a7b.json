{"ast":null,"code":"var _jsxFileName = \"/Users/harini/Documents/Harini/portfolio/portfolio/src/components/Project.js\";\nimport React, { Component } from 'react';\nimport './project.scss';\nimport { Card } from 'react-bootstrap';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Project extends Component {\n  render() {\n    const opts = {\n      height: '350',\n      width: '400',\n      playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        autoplay: 0\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-project\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(YouTube, {\n              videoId: \"Ydi80YrCnPY\",\n              opts: opts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Count-Down Timer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"A vanilla JS application which count downs to new year using \\\"Date\\\" object\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Project;\n/*\n\n\n\n\n\n                <h2>Vanilla Javascript</h2>\n                                        <div className=\"container-project\">\n\n                                            <div className=\"items\">\n                                                <Card className=\"card\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Count-Down Timer</Card.Title>\n                                                        <Card.Text>\n                                                            A vanilla JS application which count downs to new year using \"Date\" object\n                            </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                            <div className=\"items\">\n                                                <Card className=\"card\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Simple Quiz</Card.Title>\n                                                        <Card.Text>\n                                                            A vanilla JS Quiz application using API fetch await to load questions dynamically.\n                            </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                            <div className=\"items\">\n\n                                                <Card className=\"card\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Recipe</Card.Title>\n                                                        <Card.Text>\n                                                            A vanilla JS Recipe application to show recipes via keyword or ID search. Favourite recipes can be saved.\n                            </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                        </div>\n                                        <h2>NodeJS-ExpressJS-Handlebars</h2>\n                                        <div className=\"container-project-big\">\n                                            <div className=\"items-big\">\n                                                <h2>MongoDB</h2>\n                                                <Card className=\"card-big\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Shopping Cart</Card.Title>\n\n                                                        <div>\n                                                            A Shopping Cart application using ExpressJS, MongoDB, Handlebars.\n                                              </div>\n                                                        <div>\n                                                            User login and registration validated and uses PassportJS and password hashes and stored in DB using  Bcrypt-NodeJS. Prevents the Cross-Site Request Forgery(CSRF) attack by using CSURF module. Success and error messages displayed using connect-flash\n                                    </div>\n                                                        <div>\n                                                            User can add,update delete and checkout products.\n                                             </div>\n\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                            <div className=\"items-big\">\n                                                <h2>MySQL</h2>\n                                                <Card className=\"card-big\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Auctioner</Card.Title>\n\n                                                        <div>\n                                                            Auction website using ExpressJS, MySQL and Handlebars. Utilised Fashe theme from colorlib.\n                                             </div>\n                                                        <div>\n                                                            User login and registration validated and uses PassportJS and password hashes and stored in DB using  Bcrypt-NodeJS. Only logged-in user can make bids. Prevents the Cross-Site Request Forgery(CSRF) attack by using CSURF module. Success and error messages displayed using connect-flash.\n                            </div>\n                                                        <div>\n                                                            User can add,update delete products to sell and also make bids. Password forgot/reset option via sendgrid implemented.\n                                             </div>\n\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                        </div>\n                                        <h2>PHP MySQL</h2>\n                                        <div className=\"container-project-large\">\n                                            <div className=\"items-large\">\n                                                <Card className=\"card-large\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Image Gallery</Card.Title>\n                                                        <Card.Text>\n                                                            A PHP application which displays image uploaded by user in gallery\n                            </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                        </div>\n                                        <h2>ReactJS</h2>\n                                        <div className=\"container-project\">\n                                            <div className=\"items\">\n                                                <Card className=\"card\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Client Website</Card.Title>\n\n                                                        <div>\n                                                            A client's website for architectural company'\n                                             </div>\n\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                            <div className=\"items\">\n                                                <Card className=\"card\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Blurry Tool</Card.Title>\n\n                                                        <div>\n                                                            A image blur tool using ReactJS.\n                                             </div>\n\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                            <div className=\"items\">\n                                                <Card className=\"card\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Reminder</Card.Title>\n\n                                                        <div>\n                                                            A reminder application in ReactJS\n                                             </div>\n\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                        </div>\n            </div>\n        )\n    }\n}\n\nexport default Project\n\n/*\n<SRLWrapper>\n                                        {this.state.loaded === \"true\" ? <ReactFreezeframe\n                                            src=\"/gifs/shoppingCart.gif\"\n                                            className=\"image-top\"\n                                        /> : <ReactImageAppear\n                                            src=\"/gifs/shoppingCart.gif\"\n                                            className=\"image-top\"\n                                        />}\n                                    </SRLWrapper>\n\n\n                                    <Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} />\n\nimport React, {useState, useEffect} from 'react'\nimport Navbars from './Navbars'\nimport './project.css'\nimport {Card} from 'react-bootstrap';\nimport {SRLWrapper} from \"simple-react-lightbox\";\nimport ReactFreezeframe from 'react-freezeframe';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nconst Project = () =>\n{\n    const [loading, setLoader] = useState(true);\n\n    useEffect(() =>\n    {\n                                        window.onload = () =>\n                                        {\n\n                                            // changing class of the gif to fade out using css\n                                            // change the time in this setTimeout function so that is it triggered as soon as your animation ends, match it with the animation duration, and have it started like 20 milli seconds before your animation ends,\n\n                                            document.getElementById(\"loader\").className = \"puff-in-center\";\n                                            setTimeout(() =>\n                                            {\n                                                //this will make sure the loader is not showed anymore, and your main content will popup\n                                                setLoader(false)\n                                            }, 6000)\n\n                                            // match time of the loader out transition so the transition will be smooth\n\n                                        }\n                                    }, [])\n    return (\n\n        <div>\n                                        <Navbars />\n                                        {loading ?\n\n                                            <div className=\"loader-class\" id=\"loader\">Loader element</div>\n                                            :\n\n                                            <div>\n                                                <h2>Vanilla Javascript</h2>\n                                                <div className=\"container-project\">\n\n                                                    <div className=\"items\">\n                                                        <Card>\n\n                                                            <SRLWrapper>\n\n\n                                                                <ReactFreezeframe\n                                                                    src=\"/gifs/countdown.gif\"\n                                                                    className=\"image-top\"\n                                                                />\n\n                                                            </SRLWrapper>\n                                                            <Card.Body>\n                                                                <Card.Title>Count-Down Timer</Card.Title>\n                                                                <Card.Text>\n                                                                    A vanilla JS application which count downs to new year using \"Date\" object\n                            </Card.Text>\n                                                            </Card.Body>\n                                                        </Card>\n                                                    </div>\n                                                    <div className=\"items\">\n                                                        <Card >\n                                                            <SRLWrapper>\n\n                                                                <ReactFreezeframe\n                                                                    src=\"/gifs/quiz.gif\"\n                                                                    className=\"image-top\"\n                                                                />\n\n                                                            </SRLWrapper>\n                                                            <Card.Body>\n                                                                <Card.Title>Simple Quiz</Card.Title>\n                                                                <Card.Text>\n                                                                    A vanilla JS Quiz application using API fetch await to load questions dynamically.\n                            </Card.Text>\n                                                            </Card.Body>\n                                                        </Card>\n                                                    </div>\n                                                    <div className=\"items\">\n                                                        <Card >\n                                                            <SRLWrapper>\n                                                                <ReactFreezeframe src=\"/gifs/recipe.gif\" className=\"image-top\" />\n                                                            </SRLWrapper>\n                                                            <Card.Body>\n                                                                <Card.Title>Recipe</Card.Title>\n                                                                <Card.Text>\n                                                                    A vanilla JS Recipe application to show recipes via keyword or ID search. Favourite recipes can be saved.\n                            </Card.Text>\n                                                            </Card.Body>\n                                                        </Card>\n                                                    </div>\n                                                </div>\n                                                <h2>NodeJS-ExpressJS-Handlebars-MongoDB-MySQL</h2>\n                                                <div className=\"container-project-big\">\n                                                    <div className=\"items-big\">\n                                                        <Card >\n                                                            <SRLWrapper>\n                                                                <ReactFreezeframe src=\"/gifs/shoppingCart.gif\" className=\"image-top\" />\n                                                            </SRLWrapper>\n                                                            <Card.Body>\n                                                                <Card.Title>Shopping Cart</Card.Title>\n\n                                                                <div>\n                                                                    A Shopping Cart application using ExpressJS, MongoDB, Handlebars.\n                                              </div>\n                                                                <div>\n                                                                    User login and registration validated and uses PassportJS and password hashes and stored in DB using  Bcrypt-NodeJS. Prevents the Cross-Site Request Forgery(CSRF) attack by using CSURF module. Success and error messages displayed using connect-flash\n                                    </div>\n                                                                <div>\n                                                                    User can add,update delete and checkout products.\n                                             </div>\n\n                                                            </Card.Body>\n                                                        </Card>\n                                                    </div>\n                                                    <div className=\"items-big\">\n                                                        <Card >\n                                                            <SRLWrapper>\n                                                                <ReactFreezeframe src=\"/gifs/auction.gif\" className=\"image-top\" />\n                                                            </SRLWrapper>\n                                                            <Card.Body>\n                                                                <Card.Title>Auctioner</Card.Title>\n\n                                                                <div>\n                                                                    Auction website using ExpressJS, MySQL and Handlebars. Utilised Fashe theme from colorlib.\n                                             </div>\n                                                                <div>\n                                                                    User login and registration validated and uses PassportJS and password hashes and stored in DB using  Bcrypt-NodeJS. Only logged-in user can make bids. Prevents the Cross-Site Request Forgery(CSRF) attack by using CSURF module. Success and error messages displayed using connect-flash.\n                            </div>\n                                                                <div>\n                                                                    User can add,update delete products to sell and also make bids. Password forgot/reset option via sendgrid implemented.\n                                             </div>\n\n                                                            </Card.Body>\n                                                        </Card>\n                                                    </div>\n                                                </div>\n                                            </div>}\n                                    </div>\n\n*/","map":{"version":3,"sources":["/Users/harini/Documents/Harini/portfolio/portfolio/src/components/Project.js"],"names":["React","Component","Card","YouTube","Project","render","opts","height","width","playerVars","autoplay"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAO,+DAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;;AACA,OAAO,MAAMC,OAAN,SAAsBH,SAAtB,CACP;AACII,EAAAA,MAAM,GAEF;AACI,UAAMC,IAAI,GAAG;AACTC,MAAAA,MAAM,EAAE,KADC;AAETC,MAAAA,KAAK,EAAE,KAFE;AAGTC,MAAAA,UAAU,EAAE;AACR;AACAC,QAAAA,QAAQ,EAAE;AAFF;AAHH,KAAb;AAQJ,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA,+BACI;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA,iCACI;AAAK,YAAA,KAAK,EAAC,WAAX;AAAA,oCACI,QAAC,OAAD;AAAS,cAAA,OAAO,EAAC,aAAjB;AAA+B,cAAA,IAAI,EAAEJ;AAArC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEQ;AAAK,cAAA,KAAK,EAAC,SAAX;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AA9BL;AAiCA,eAAeF,OAAfsourcesContent":["\nimport React, { Component } from 'react'\nimport './project.scss'\nimport { Card } from 'react-bootstrap';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport YouTube from 'react-youtube';\nexport class Project extends Component\n{\n    render()\n\n        {\n            const opts = {\n                height: '350',\n                width: '400',\n                playerVars: {\n                    // https://developers.google.com/youtube/player_parameters\n                    autoplay: 0,\n                },\n            };\n        return (\n            <div className=\"main-project\">\n                <div class=\"row\">\n                    <div class=\"column\">\n                        <div class=\"container\">\n                            <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                <div class=\"content\">\n                                <h1>Count-Down Timer</h1>\n                                <p>A vanilla JS application which count downs to new year using \"Date\" object\n                                </p>\n                                </div>\n</div>\n\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Project\n/*\n\n\n\n\n\n                <h2>Vanilla Javascript</h2>\n                                        <div className=\"container-project\">\n\n                                            <div className=\"items\">\n                                                <Card className=\"card\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Count-Down Timer</Card.Title>\n                                                        <Card.Text>\n                                                            A vanilla JS application which count downs to new year using \"Date\" object\n                            </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                            <div className=\"items\">\n                                                <Card className=\"card\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Simple Quiz</Card.Title>\n                                                        <Card.Text>\n                                                            A vanilla JS Quiz application using API fetch await to load questions dynamically.\n                            </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                            <div className=\"items\">\n\n                                                <Card className=\"card\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Recipe</Card.Title>\n                                                        <Card.Text>\n                                                            A vanilla JS Recipe application to show recipes via keyword or ID search. Favourite recipes can be saved.\n                            </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                        </div>\n                                        <h2>NodeJS-ExpressJS-Handlebars</h2>\n                                        <div className=\"container-project-big\">\n                                            <div className=\"items-big\">\n                                                <h2>MongoDB</h2>\n                                                <Card className=\"card-big\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Shopping Cart</Card.Title>\n\n                                                        <div>\n                                                            A Shopping Cart application using ExpressJS, MongoDB, Handlebars.\n                                              </div>\n                                                        <div>\n                                                            User login and registration validated and uses PassportJS and password hashes and stored in DB using  Bcrypt-NodeJS. Prevents the Cross-Site Request Forgery(CSRF) attack by using CSURF module. Success and error messages displayed using connect-flash\n                                    </div>\n                                                        <div>\n                                                            User can add,update delete and checkout products.\n                                             </div>\n\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                            <div className=\"items-big\">\n                                                <h2>MySQL</h2>\n                                                <Card className=\"card-big\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Auctioner</Card.Title>\n\n                                                        <div>\n                                                            Auction website using ExpressJS, MySQL and Handlebars. Utilised Fashe theme from colorlib.\n                                             </div>\n                                                        <div>\n                                                            User login and registration validated and uses PassportJS and password hashes and stored in DB using  Bcrypt-NodeJS. Only logged-in user can make bids. Prevents the Cross-Site Request Forgery(CSRF) attack by using CSURF module. Success and error messages displayed using connect-flash.\n                            </div>\n                                                        <div>\n                                                            User can add,update delete products to sell and also make bids. Password forgot/reset option via sendgrid implemented.\n                                             </div>\n\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                        </div>\n                                        <h2>PHP MySQL</h2>\n                                        <div className=\"container-project-large\">\n                                            <div className=\"items-large\">\n                                                <Card className=\"card-large\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Image Gallery</Card.Title>\n                                                        <Card.Text>\n                                                            A PHP application which displays image uploaded by user in gallery\n                            </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                        </div>\n                                        <h2>ReactJS</h2>\n                                        <div className=\"container-project\">\n                                            <div className=\"items\">\n                                                <Card className=\"card\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Client Website</Card.Title>\n\n                                                        <div>\n                                                            A client's website for architectural company'\n                                             </div>\n\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                            <div className=\"items\">\n                                                <Card className=\"card\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Blurry Tool</Card.Title>\n\n                                                        <div>\n                                                            A image blur tool using ReactJS.\n                                             </div>\n\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                            <div className=\"items\">\n                                                <Card className=\"card\">\n                                                    <YouTube videoId=\"Ydi80YrCnPY\" opts={opts} />\n                                                    <Card.Body>\n                                                        <Card.Title>Reminder</Card.Title>\n\n                                                        <div>\n                                                            A reminder application in ReactJS\n                                             </div>\n\n                                                    </Card.Body>\n                                                </Card>\n                                            </div>\n                                        </div>\n            </div>\n        )\n    }\n}\n\nexport default Project\n\n/*\n<SRLWrapper>\n                                        {this.state.loaded === \"true\" ? <ReactFreezeframe\n                                            src=\"/gifs/shoppingCart.gif\"\n                                            className=\"image-top\"\n                                        /> : <ReactImageAppear\n                                            src=\"/gifs/shoppingCart.gif\"\n                                            className=\"image-top\"\n                                        />}\n                                    </SRLWrapper>\n\n\n                                    <Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} />\n\nimport React, {useState, useEffect} from 'react'\nimport Navbars from './Navbars'\nimport './project.css'\nimport {Card} from 'react-bootstrap';\nimport {SRLWrapper} from \"simple-react-lightbox\";\nimport ReactFreezeframe from 'react-freezeframe';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nconst Project = () =>\n{\n    const [loading, setLoader] = useState(true);\n\n    useEffect(() =>\n    {\n                                        window.onload = () =>\n                                        {\n\n                                            // changing class of the gif to fade out using css\n                                            // change the time in this setTimeout function so that is it triggered as soon as your animation ends, match it with the animation duration, and have it started like 20 milli seconds before your animation ends,\n\n                                            document.getElementById(\"loader\").className = \"puff-in-center\";\n                                            setTimeout(() =>\n                                            {\n                                                //this will make sure the loader is not showed anymore, and your main content will popup\n                                                setLoader(false)\n                                            }, 6000)\n\n                                            // match time of the loader out transition so the transition will be smooth\n\n                                        }\n                                    }, [])\n    return (\n\n        <div>\n                                        <Navbars />\n                                        {loading ?\n\n                                            <div className=\"loader-class\" id=\"loader\">Loader element</div>\n                                            :\n\n                                            <div>\n                                                <h2>Vanilla Javascript</h2>\n                                                <div className=\"container-project\">\n\n                                                    <div className=\"items\">\n                                                        <Card>\n\n                                                            <SRLWrapper>\n\n\n                                                                <ReactFreezeframe\n                                                                    src=\"/gifs/countdown.gif\"\n                                                                    className=\"image-top\"\n                                                                />\n\n                                                            </SRLWrapper>\n                                                            <Card.Body>\n                                                                <Card.Title>Count-Down Timer</Card.Title>\n                                                                <Card.Text>\n                                                                    A vanilla JS application which count downs to new year using \"Date\" object\n                            </Card.Text>\n                                                            </Card.Body>\n                                                        </Card>\n                                                    </div>\n                                                    <div className=\"items\">\n                                                        <Card >\n                                                            <SRLWrapper>\n\n                                                                <ReactFreezeframe\n                                                                    src=\"/gifs/quiz.gif\"\n                                                                    className=\"image-top\"\n                                                                />\n\n                                                            </SRLWrapper>\n                                                            <Card.Body>\n                                                                <Card.Title>Simple Quiz</Card.Title>\n                                                                <Card.Text>\n                                                                    A vanilla JS Quiz application using API fetch await to load questions dynamically.\n                            </Card.Text>\n                                                            </Card.Body>\n                                                        </Card>\n                                                    </div>\n                                                    <div className=\"items\">\n                                                        <Card >\n                                                            <SRLWrapper>\n                                                                <ReactFreezeframe src=\"/gifs/recipe.gif\" className=\"image-top\" />\n                                                            </SRLWrapper>\n                                                            <Card.Body>\n                                                                <Card.Title>Recipe</Card.Title>\n                                                                <Card.Text>\n                                                                    A vanilla JS Recipe application to show recipes via keyword or ID search. Favourite recipes can be saved.\n                            </Card.Text>\n                                                            </Card.Body>\n                                                        </Card>\n                                                    </div>\n                                                </div>\n                                                <h2>NodeJS-ExpressJS-Handlebars-MongoDB-MySQL</h2>\n                                                <div className=\"container-project-big\">\n                                                    <div className=\"items-big\">\n                                                        <Card >\n                                                            <SRLWrapper>\n                                                                <ReactFreezeframe src=\"/gifs/shoppingCart.gif\" className=\"image-top\" />\n                                                            </SRLWrapper>\n                                                            <Card.Body>\n                                                                <Card.Title>Shopping Cart</Card.Title>\n\n                                                                <div>\n                                                                    A Shopping Cart application using ExpressJS, MongoDB, Handlebars.\n                                              </div>\n                                                                <div>\n                                                                    User login and registration validated and uses PassportJS and password hashes and stored in DB using  Bcrypt-NodeJS. Prevents the Cross-Site Request Forgery(CSRF) attack by using CSURF module. Success and error messages displayed using connect-flash\n                                    </div>\n                                                                <div>\n                                                                    User can add,update delete and checkout products.\n                                             </div>\n\n                                                            </Card.Body>\n                                                        </Card>\n                                                    </div>\n                                                    <div className=\"items-big\">\n                                                        <Card >\n                                                            <SRLWrapper>\n                                                                <ReactFreezeframe src=\"/gifs/auction.gif\" className=\"image-top\" />\n                                                            </SRLWrapper>\n                                                            <Card.Body>\n                                                                <Card.Title>Auctioner</Card.Title>\n\n                                                                <div>\n                                                                    Auction website using ExpressJS, MySQL and Handlebars. Utilised Fashe theme from colorlib.\n                                             </div>\n                                                                <div>\n                                                                    User login and registration validated and uses PassportJS and password hashes and stored in DB using  Bcrypt-NodeJS. Only logged-in user can make bids. Prevents the Cross-Site Request Forgery(CSRF) attack by using CSURF module. Success and error messages displayed using connect-flash.\n                            </div>\n                                                                <div>\n                                                                    User can add,update delete products to sell and also make bids. Password forgot/reset option via sendgrid implemented.\n                                             </div>\n\n                                                            </Card.Body>\n                                                        </Card>\n                                                    </div>\n                                                </div>\n                                            </div>}\n                                    </div>\n\n*/"]},"metadata":{},"sourceType":"module"}